type Listing @entity {
  id: ID!
  listingId: BigInt!
  seller: Bytes!
  nftAddress: Bytes!
  tokenId: BigInt!
  price: BigInt!
  isSold: Boolean!
  listedAt: BigInt!
  soldAt: BigInt
  transactionHash: Bytes!
  purchase: Purchase @derivedFrom(field: "listing")
}

type Purchase @entity {
  id: ID!
  listing: Listing
  buyer: Bytes!
  seller: Bytes!
  nftAddress: Bytes!
  tokenId: BigInt!
  price: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type User @entity {
  id: ID!
  address: Bytes!
  totalListings: BigInt!
  totalPurchases: BigInt!
  totalSales: BigInt!
  totalVolumeAsBuyer: BigInt!
  totalVolumeAsSeller: BigInt!
}

type MarketplaceStat @entity {
  id: ID!
  totalListings: BigInt!
  totalSales: BigInt!
  totalVolume: BigInt!
  totalActiveListings: BigInt!
  averagePrice: BigInt!
  updatedAt: BigInt!
} 